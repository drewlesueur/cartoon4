<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">  
<head>
<style>
#play {
  width: 100%;
  background-color: #eeeeee;
  height: 20px;
  position: relative
}

.track {
  width: 100%;
  background-color: rgb(76,69,55);
  height: 20px;
  position: relative;
  border-bottom: 1px solid rgb(157,165,154);
}

.selected {
  background-color: rgb(176, 169, 155) !important;
}


#stage {
width: 100%;
border: 1px solid black;
height: 800px;
position: relative;
}

.object {
   resize: both;
   overflow: auto;
  
   background-color: red;
   position: absolute;
}

#needle {
  width : 5px;
  background-color: green;
  height: 20px;
  position: absolute;
}

#tracks {
  height: 200px;
  overflow: scroll;
}

.move {
  background-color: rgb(247,201,0);
  position: absolute;
  height: 20px;
}

.move-selected {
  border: 1px solid rgb(255,255,100);
  margin: -1px;
}


.resizer {
  background-color: green;
  position: absolute;
  right: 0px;
  width: 10px;
  height: 15px;
}

@-webkit-keyframes bounce {
 from {
   left: 0px;
 }
 to {
   left: 200px;
 }
}



#test {
  background-color: #778C88;
  position: absolute;
  width: 100px;
  height: 100px;
  -webkit-box-shadow: rgba(0, 0, 0, 1) 0px 0px 10px;
  
  -webkit-animation-name: bounce;
 -webkit-animation-duration: 4s;
 -webkit-animation-iteration-count: 10;
 -webkit-animation-direction: alternate;
 border-radius: 10px;
  
}




</style>
<script src="jquery.js"></script>
<script src="util.js"></script>
<script><![CDATA[
$(function(){

  var lastSheet = document.styleSheets[document.styleSheets.length - 1]
  lastSheet.insertRule("@-webkit-keyframes test2 { 0% { top: 0px; } 50.556% {left: 100px;} 100% {top: 100px;} }", lastSheet.cssRules.length);
 //$('#test')[0].style.webkitAnimationName = 'test2'
  $('#test').css({
      '-webkit-animation-name' : 'test2',
      '-webkit-animation-duration' : '0.5s',
      '-webkit-animation-iteration-count' : '10'
  })
  

    
  
   function draggable_x(el) {
      $(el).mousedown(function(e){
          var obj = this;
          e.preventDefault()
          var parent_offset_left = $(obj).parent().offset().left
          var start_offset_left = e.pageX - $(obj).offset().left //- parent_offset_left
          function mousemove(e){
              $(obj).css("left", (e.pageX - parent_offset_left - start_offset_left) + "px")
              
          }
          function mouseup(e){
             $(document.body).unbind("mousemove", mousemove)
          }
          $(document.body).bind("mousemove", mousemove)
          $(document.body).bind("mouseup", mouseup)
      })
   }
   
   
     function draggable(el) {
      $(el).mousedown(function(e){
          var obj = this;
          e.preventDefault()
          var parent_offset_left = $(obj).parent().offset().left
          var parent_offset_top = $(obj).parent().offset().top
          var start_offset_left = e.pageX - $(obj).offset().left //- parent_offset_left
          var start_offset_top = e.pageY - $(obj).offset().top //- parent_offset_top
          function mousemove(e){
              $(obj).css("left", (e.pageX - parent_offset_left - start_offset_left) + "px")
              $(obj).css("top", (e.pageY - parent_offset_top - start_offset_top) + "px")
          }
          function mouseup(e){
             $(document.body).unbind("mousemove", mousemove)
          }
          $(document.body).bind("mousemove", mousemove)
          $(document.body).bind("mouseup", mouseup)
      })
  }
   
   function resizable(el) {
       var resizer = $('<div class="resizer"></div>')
       $(el).append(resizer)
       var obj = el;
       $(resizer).mousedown(function(e){
          e.preventDefault()
          e.stopPropagation()
           var parent_offset_left = $(obj).parent().offset().left
           var parent_offset_top = $(obj).parent().offset().top
           var start_offset_left = e.pageX - $(obj).offset().left //- parent_offset_left
           var start_offset_top = e.pageY - $(obj).offset().top //- parent_offset_top
           var offset_left = $(obj).offset().left - parent_offset_left
           var offset_top = $(obj).offset().top - parent_offset_left
            function mousemove(e){
              
              console.log((e.pageX - parent_offset_left ) + " " + offset_left)
              
              $(obj).css("width", (e.pageX - parent_offset_left) - offset_left + "px")
              //$(obj).css("top", (e.pageY - parent_offset_top - start_offset_top) - offset_top + "px")
            }
            function mouseup(e){
               $(document.body).unbind("mousemove", mousemove)
            }
            $(document.body).bind("mousemove", mousemove)
            $(document.body).bind("mouseup", mouseup)
           
          
       })
       
   
   }
   
   
   
   
  
  
  
  current_track = "";
  moves = {}
  var playing;
  var audio = $('#main-song')[0]
  var last_key = ""
  
  $(document).keydown(function(e){
      if ($(e.target).is("input")) return;
      if (playing == false) return;
      
      e.preventDefault()
      if (e.keyCode == last_key) return;
      last_key = e.keyCode
      //last key deal because keydown is fired as you hold the key down
      
      
      moves[current_track].push(audio.currentTime)
      
      
  }).keyup(function(e){
      
      if ($(e.target).is("input")) return;
      if (playing == false) return;
      last_key = "";
      moves[current_track].push(audio.currentTime)
      
      
      var these_moves = moves[current_track]
      var last_move_time = _s(these_moves, -1)[0]
      var second_last_move_time = _s(these_moves, -2,1)[0]
      var track = $('#' + current_track)
      put_move(last_move_time, second_last_move_time , track)
      
      
  })
  
  function put_move(last_move_time, second_last_move_time, track) {
        
       var duration_width_ratio =   track.width() / audio.duration
      
      
      var left = second_last_move_time * duration_width_ratio;
      var width = (last_move_time - second_last_move_time) * duration_width_ratio
      
      if (width < 1) {
        width = 1;
      }
      
      
      var move = $('<div id="" class="move" style="left: '+left+'px; width:'+width+'px;"></div>')
      track.append(move)
      resizable(move)
      draggable_x(move)
  }
  
  
  function setPlayHead(){
     
     var duration = audio.duration
     var currentTime = audio.currentTime
     
     var width = $("#play").width()
     var pos = currentTime / duration * width
     $('#needle').css("left", pos + "px")
     $('#time').text(audio.currentTime)
     
  }
  
      var needle_interval;
      //var audio = $("<audio id='main-song'></audio>")
      $(audio).bind('canplaythrough', function(){
          this.play()
      }).bind('play', function(){
          playing = true;
          needle_interval = setInterval(setPlayHead, 10)
      }).bind("pause", function(){
          playing = false;
          //clearTimeout(needle_interval)
      })
      
      
      $('#tracks').click(function(e) {
          
          
          if ($(e.target).is(".move")) {
             $('.move').removeClass("move-selected");
             
             $(e.target).addClass("move-selected");
             
          } 
          
          if (!$(e.target).is(".track")) return;
          
          $('.track').removeClass('selected')
          $(e.target).addClass('selected')
          current_track = $(e.target).attr("id")
          
          
         
      })
      
      $('#add_track').click(function(e){
          
          
          var id = (new Date()).getTime()
          $('#tracks').append('<div class="track" id="'+id+'">')
          current_track = id;
          moves[id] = []
          $('.track').removeClass("selected")
          $('#' + id).addClass('selected')
          
          
          return false
      })
      
   $('#zoom').change(function(){
      var base = 500;
      var zoom = $(this).val()
      var width = zoom * base
      
      $('#play').css('width', width + "px")
      var selected_id = $('.selected').attr('id')
      redraw_tracks(width, selected_id)
   })
   
   $('#rate').change(function(){
      audio.playbackRate = $(this).val() - 0
      console.log(audio.playbackRate)
   })
   
   $('#play').click(function(e){
      var left = e.pageX - $(this).offset().left 
      audio.currentTime = left * (audio.duration / $(this).width())
   })
   
   
   var object_count = 0;
   
   $('#add_object').click(function(e){
      $('#stage').append('<div id="obj_'+object_count+'" class="object">har</div>');
      draggable('#obj_' + object_count)
      object_count++
      return false;
   })
   
   function redraw_tracks(width, selected_id) {
      $('.track').remove();
      
      for (var i in moves) {
          var track = $('<div class="track" style="width: '+width+'px;" id="'+i+'">')
          var these_moves = moves[i]
          $('#tracks').append(track);
          for (var move_index = 0; move_index < these_moves.length; move_index+=2) {
              
              
              put_move(these_moves[move_index+1], these_moves[move_index], track);
          }
          
          $('#' + selected_id).addClass('selected')
      }
      
   }
   
   $('#add_track').click()
  /*
  var canvas = $('#canvas')[0]
  var ctx = canvas.getContext("2d")
  ctx.fillStyle = "#ff1100";
  //ctx.fillRect(0,0,30,30)
  
  var img = new Image()
  img.onload = function(){
      ctx.drawImage(img,0,0)
  }
  img.src = "test.svg"
  */
  
  
})
]]></script>
</head>

<body>
<a href="#" id="add_object">Add object</a>

  <div id="stage">
  <div id="test">yo</div>
  </div>

<audio  id="main-song" controls="true" src="caribe.mp3"></audio>


<div id="time"></div>

<div id="tracks">
<div id="play">
<div id="needle"></div>
</div>
</div>
<a href="#" id="add_track">Add track</a><br />
<br />
Zoom<input type="text" id="zoom" />
<br />
rate<input type="text" id="rate" />


<!--<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  
viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice"  
style="width:100%; height:100%; position:absolute; top:0; left:0; z-index:-1;">  
<linearGradient id="gradient">  
<stop class="begin" offset="0%"/>  
<stop class="end" offset="100%"/>  
</linearGradient>  
<rect x="0" y="0" width="100" height="100" style="fill:url(#gradient)" />  
<circle cx="50" cy="50" r="30" style="fill:url(#gradient)" />  
</svg> -->

 
</body>
</html>